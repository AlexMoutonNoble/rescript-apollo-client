// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var ApolloClient__Core_Types = require("./ApolloClient__Core_Types.bs.js");
var ApolloClient__ZenObservable = require("../../../zen-observable/ApolloClient__ZenObservable.bs.js");

function fakeMap(js, fn) {
  return (function (js, fn) {
              var originalSubscribe = js.subscribe.bind(js);
              js.subscribe = function (onNext, onError, onComplete) {
                var newOnNext = function (result) {
                  var parsedData = result.data ? fn(result.data, onError) : undefined;
                  var transformedResult = parsedData
                    ? Object.assign({}, result, { data: parsedData })
                    : result;
                  return onNext(transformedResult);
                };
                return originalSubscribe(newOnNext, onError, onComplete);
              };
              return js;
            })(js, fn);
}

var Js_ = {
  fakeMap: fakeMap
};

function preserveJsPropsAndContext(js, t) {
  return (function (js, t) {
            return Object.assign(js, t)
          })(js, t);
}

function fromJs(js, safeParse) {
  var parseWithOnErrorCall = function (jsData, onError) {
    var data = Curry._1(safeParse, jsData);
    if (data.TAG === /* Ok */0) {
      return Caml_option.some(data._0);
    }
    Curry._1(onError, data._0.error);
    
  };
  var observableWithParsedData = fakeMap(js, parseWithOnErrorCall);
  return preserveJsPropsAndContext(observableWithParsedData, {
              rescript_subscribe: (function (onNext, onError, onComplete, param) {
                  return ApolloClient__ZenObservable.Subscription.fromJs(js.subscribe((function (jsApolloQueryResult) {
                                    return Curry._1(onNext, ApolloClient__Core_Types.ApolloQueryResult.fromJs(jsApolloQueryResult, safeParse));
                                  }), onError !== undefined ? Caml_option.valFromOption(onError) : undefined, onComplete !== undefined ? Caml_option.valFromOption(onComplete) : undefined));
                })
            });
}

var ObservableQuery = {
  ApolloQueryResult: undefined,
  Subscription: undefined,
  Observer: undefined,
  Js_: Js_,
  preserveJsPropsAndContext: preserveJsPropsAndContext,
  fromJs: fromJs
};

var Types;

exports.Types = Types;
exports.ObservableQuery = ObservableQuery;
/* ApolloClient__Core_Types Not a pure module */
