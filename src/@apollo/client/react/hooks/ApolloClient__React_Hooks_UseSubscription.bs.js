// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Client = require("@apollo/client");
var ApolloClient__Utils = require("../../../../ApolloClient__Utils.bs.js");
var ApolloClient__React_Types = require("../types/ApolloClient__React_Types.bs.js");
var ApolloClient__Errors_ApolloError = require("../../errors/ApolloClient__Errors_ApolloError.bs.js");

var Js_ = {};

function useSubscription(Operation, client, fetchPolicy, $staropt$star, onSubscriptionData, onSubscriptionComplete, shouldResubscribe, skip, variables) {
  var mapJsVariables = $staropt$star !== undefined ? $staropt$star : (function (prim) {
        return prim;
      });
  var safeParse = function (param) {
    return ApolloClient__Utils.safeParse(Operation.parse, param);
  };
  var jsSubscriptionResult = Client.useSubscription(Operation.query, ApolloClient__React_Types.SubscriptionHookOptions.toJs({
            subscription: undefined,
            variables: variables,
            fetchPolicy: fetchPolicy,
            shouldResubscribe: shouldResubscribe,
            client: client,
            skip: skip,
            onSubscriptionData: onSubscriptionData,
            onSubscriptionComplete: onSubscriptionComplete
          }, mapJsVariables, safeParse, Operation.serializeVariables));
  return ApolloClient__Utils.useGuaranteedMemo1((function (param) {
                return {
                        variables: jsSubscriptionResult.variables,
                        loading: jsSubscriptionResult.loading,
                        data: Belt_Option.map(jsSubscriptionResult.data, Operation.parse),
                        error: Belt_Option.map(jsSubscriptionResult.error, ApolloClient__Errors_ApolloError.fromJs)
                      };
              }), jsSubscriptionResult);
}

function Extend(M) {
  var use = function (client, fetchPolicy, onSubscriptionData, onSubscriptionComplete, shouldResubscribe, skip, variables) {
    return useSubscription(M, client, fetchPolicy, undefined, onSubscriptionData, onSubscriptionComplete, shouldResubscribe, skip, variables);
  };
  return {
          use: use
        };
}

var ApolloClient;

var ApolloError;

var BaseSubscriptionOptions;

var FetchPolicy;

var Graphql;

var OnSubscriptionDataOptions;

var SubscriptionHookOptions;

var Types;

var Utils;

exports.ApolloClient = ApolloClient;
exports.ApolloError = ApolloError;
exports.BaseSubscriptionOptions = BaseSubscriptionOptions;
exports.FetchPolicy = FetchPolicy;
exports.Graphql = Graphql;
exports.OnSubscriptionDataOptions = OnSubscriptionDataOptions;
exports.SubscriptionHookOptions = SubscriptionHookOptions;
exports.Types = Types;
exports.Utils = Utils;
exports.Js_ = Js_;
exports.useSubscription = useSubscription;
exports.Extend = Extend;
/* @apollo/client Not a pure module */
