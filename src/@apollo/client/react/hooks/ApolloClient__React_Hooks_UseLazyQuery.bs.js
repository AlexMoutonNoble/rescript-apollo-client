// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("rescript/lib/js/caml_option.js");
var Client = require("@apollo/client");
var ApolloClient__Utils = require("../../../../ApolloClient__Utils.bs.js");
var ApolloClient__React_Types = require("../types/ApolloClient__React_Types.bs.js");

var Js_ = {};

function useLazyQuery(Operation, client, context, displayName, errorPolicy, fetchPolicy, nextFetchPolicy, notifyOnNetworkStatusChange, onCompleted, onError, partialRefetch, pollInterval, ssr, param) {
  var safeParse = function (param) {
    return ApolloClient__Utils.safeParse(Operation.parse, param);
  };
  var jsQueryTuple = Client.useLazyQuery(Operation.query, ApolloClient__React_Types.LazyQueryHookOptions.toJs({
            query: undefined,
            displayName: displayName,
            onCompleted: onCompleted,
            onError: onError,
            client: client,
            context: context,
            errorPolicy: errorPolicy,
            fetchPolicy: fetchPolicy,
            nextFetchPolicy: nextFetchPolicy,
            notifyOnNetworkStatusChange: notifyOnNetworkStatusChange,
            partialRefetch: partialRefetch,
            pollInterval: pollInterval,
            ssr: ssr,
            variables: undefined
          }, safeParse, Operation.serializeVariables));
  return ApolloClient__Utils.useGuaranteedMemo1((function (param) {
                return ApolloClient__React_Types.QueryTuple.fromJs(jsQueryTuple, safeParse, Operation.serialize, Operation.serializeVariables);
              }), jsQueryTuple);
}

function useLazyQueryWithVariables(Operation, client, context, displayName, errorPolicy, fetchPolicy, nextFetchPolicy, $staropt$star, notifyOnNetworkStatusChange, onCompleted, onError, partialRefetch, pollInterval, ssr, variables) {
  var mapJsVariables = $staropt$star !== undefined ? $staropt$star : (function (prim) {
        return prim;
      });
  var safeParse = function (param) {
    return ApolloClient__Utils.safeParse(Operation.parse, param);
  };
  var jsQueryTuple = Client.useLazyQuery(Operation.query, ApolloClient__React_Types.LazyQueryHookOptions.toJs({
            query: undefined,
            displayName: displayName,
            onCompleted: onCompleted,
            onError: onError,
            client: client,
            context: context,
            errorPolicy: errorPolicy,
            fetchPolicy: fetchPolicy,
            nextFetchPolicy: nextFetchPolicy,
            notifyOnNetworkStatusChange: notifyOnNetworkStatusChange,
            partialRefetch: partialRefetch,
            pollInterval: pollInterval,
            ssr: ssr,
            variables: Caml_option.some(variables)
          }, safeParse, Operation.serializeVariables));
  return ApolloClient__Utils.useGuaranteedMemo1((function (param) {
                return ApolloClient__React_Types.QueryTuple__noVariables.fromJs(jsQueryTuple, mapJsVariables, safeParse, Operation.serialize, Operation.serializeVariables, variables);
              }), jsQueryTuple);
}

var ApolloClient;

var ApolloError;

var ErrorPolicy;

var Graphql;

var LazyQueryHookOptions;

var QueryTuple;

var QueryTuple__noVariables;

var Types;

var Utils;

var WatchQueryFetchPolicy;

exports.ApolloClient = ApolloClient;
exports.ApolloError = ApolloError;
exports.ErrorPolicy = ErrorPolicy;
exports.Graphql = Graphql;
exports.LazyQueryHookOptions = LazyQueryHookOptions;
exports.QueryTuple = QueryTuple;
exports.QueryTuple__noVariables = QueryTuple__noVariables;
exports.Types = Types;
exports.Utils = Utils;
exports.WatchQueryFetchPolicy = WatchQueryFetchPolicy;
exports.Js_ = Js_;
exports.useLazyQuery = useLazyQuery;
exports.useLazyQueryWithVariables = useLazyQueryWithVariables;
/* @apollo/client Not a pure module */
