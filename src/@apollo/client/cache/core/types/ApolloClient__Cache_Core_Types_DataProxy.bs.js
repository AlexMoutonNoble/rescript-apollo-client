// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");

var Js_ = {};

function toJs(t, mapJsVariablesOpt, serializeVariables) {
  var mapJsVariables = mapJsVariablesOpt !== undefined ? mapJsVariablesOpt : (function (prim) {
        return prim;
      });
  return {
          query: t.query,
          variables: Curry._1(mapJsVariables, Curry._1(serializeVariables, t.variables)),
          id: t.id
        };
}

var Query = {
  Js_: Js_,
  toJs: toJs
};

var Js_$1 = {};

var Fragment = {
  Js_: Js_$1
};

var Js_$2 = {};

function toJs$1(t, mapJsVariablesOpt, serialize, serializeVariables) {
  var mapJsVariables = mapJsVariablesOpt !== undefined ? mapJsVariablesOpt : (function (prim) {
        return prim;
      });
  return {
          data: Curry._1(serialize, t.data),
          broadcast: t.broadcast,
          query: t.query,
          variables: Curry._1(mapJsVariables, Curry._1(serializeVariables, t.variables)),
          id: t.id
        };
}

var WriteQueryOptions = {
  Js_: Js_$2,
  toJs: toJs$1
};

var Js_$3 = {};

function toJs$2(t, serialize) {
  return {
          data: Curry._1(serialize, t.data),
          broadcast: t.broadcast,
          id: t.id,
          fragment: t.fragment,
          fragmentName: t.fragmentName
        };
}

var WriteFragmentOptions = {
  Js_: Js_$3,
  toJs: toJs$2
};

var Graphql;

var Utils;

exports.Graphql = Graphql;
exports.Utils = Utils;
exports.Query = Query;
exports.Fragment = Fragment;
exports.WriteQueryOptions = WriteQueryOptions;
exports.WriteFragmentOptions = WriteFragmentOptions;
/* No side effect */
