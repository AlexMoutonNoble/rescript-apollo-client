// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var Client = require("@apollo/client");
var ApolloClient__Cache_Core_Cache = require("../core/ApolloClient__Cache_Core_Cache.bs.js");
var ApolloClient__Cache_InMemory_Policies = require("./ApolloClient__Cache_InMemory_Policies.bs.js");

var Js_ = {};

function make(prim0, prim1, prim2, prim3, prim4, prim5) {
  var tmp = {};
  if (prim0 !== undefined) {
    tmp.resultCaching = Caml_option.valFromOption(prim0);
  }
  if (prim1 !== undefined) {
    tmp.possibleTypes = Caml_option.valFromOption(prim1);
  }
  if (prim2 !== undefined) {
    tmp.typePolicies = Caml_option.valFromOption(prim2);
  }
  if (prim3 !== undefined) {
    tmp.dataIdFromObject = Caml_option.valFromOption(prim3);
  }
  if (prim4 !== undefined) {
    tmp.addTypename = Caml_option.valFromOption(prim4);
  }
  return tmp;
}

var InMemoryCacheConfig = {
  Js_: Js_,
  make: make
};

var Js_$1 = {};

function make$1(addTypename, dataIdFromObject, possibleTypes, resultCaching, typePolicies, param) {
  return ApolloClient__Cache_Core_Cache.ApolloCache.fromJs(new Client.InMemoryCache(make(resultCaching, possibleTypes, Belt_Option.map(typePolicies, ApolloClient__Cache_InMemory_Policies.TypePolicies.toJs), dataIdFromObject, addTypename, undefined)));
}

var ApolloCache;

var KeyFieldsFunction;

var PossibleTypesMap;

var TypePolicy;

var TypePolicies;

exports.ApolloCache = ApolloCache;
exports.KeyFieldsFunction = KeyFieldsFunction;
exports.PossibleTypesMap = PossibleTypesMap;
exports.TypePolicy = TypePolicy;
exports.TypePolicies = TypePolicies;
exports.InMemoryCacheConfig = InMemoryCacheConfig;
exports.Js_ = Js_$1;
exports.make = make$1;
/* @apollo/client Not a pure module */
