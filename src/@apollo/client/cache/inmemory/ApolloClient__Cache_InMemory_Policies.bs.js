// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Js_dict = require("rescript/lib/js/js_dict.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var ApolloClient__Utilities_Policies_Pagination = require("../../utilities/policies/ApolloClient__Utilities_Policies_Pagination.bs.js");
var ApolloClient__Cache_InMemory_Policies_FieldPolicy = require("./ApolloClient__Cache_InMemory_Policies_FieldPolicy.bs.js");

var Js_ = {};

var KeyFieldsContext = {
  Js_: Js_
};

var Js_$1 = {};

var KeyFieldsFunction = {
  Js_: Js_$1
};

function fieldPolicy(v) {
  return v;
}

function fieldReadFunction(v) {
  return v;
}

var FieldsUnion = {
  fieldPolicy: fieldPolicy,
  fieldReadFunction: fieldReadFunction
};

var Js_$2 = {
  FieldsUnion: FieldsUnion
};

function toJs(t) {
  return {
          keyFields: Belt_Option.map(t.keyFields, ApolloClient__Cache_InMemory_Policies_FieldPolicy.FieldPolicy_KeyArgs.toJs),
          queryType: t.queryType,
          mutationType: t.mutationType,
          subscriptionType: t.subscriptionType,
          fields: Belt_Option.map(t.fields, (function (fields) {
                  return Js_dict.fromArray(Belt_Array.map(fields, (function (param) {
                                    var t_field = param[1];
                                    var tmp;
                                    switch (t_field.TAG | 0) {
                                      case /* ConcatPagination */0 :
                                          tmp = ApolloClient__Utilities_Policies_Pagination.concatPagination(t_field._0);
                                          break;
                                      case /* OffsetLimitPagination */1 :
                                          tmp = ApolloClient__Utilities_Policies_Pagination.offsetLimitPagination(t_field._0);
                                          break;
                                      case /* RelayStylePagination */2 :
                                          tmp = ApolloClient__Utilities_Policies_Pagination.relayStylePagination(t_field._0);
                                          break;
                                      case /* FieldPolicy */3 :
                                          tmp = ApolloClient__Cache_InMemory_Policies_FieldPolicy.FieldPolicy.toJs(t_field._0);
                                          break;
                                      case /* FieldReadFunction */4 :
                                          var partial_arg = t_field._0;
                                          tmp = (function (param, param$1) {
                                              return ApolloClient__Cache_InMemory_Policies_FieldPolicy.FieldReadFunction.toJs(partial_arg, param, param$1);
                                            });
                                          break;
                                      
                                    }
                                    return [
                                            param[0],
                                            tmp
                                          ];
                                  })));
                }))
        };
}

function make(fields, keyFields, mutationType, queryType, subscriptionType, param) {
  return {
          keyFields: keyFields,
          queryType: queryType,
          mutationType: mutationType,
          subscriptionType: subscriptionType,
          fields: fields
        };
}

var TypePolicy = {
  Js_: Js_$2,
  toJs: toJs,
  make: make
};

var Js_$3 = {};

function toJs$1(t) {
  return Js_dict.fromArray(Belt_Array.map(t, (function (param) {
                    return [
                            param[0],
                            toJs(param[1])
                          ];
                  })));
}

var TypePolicies = {
  Js_: Js_$3,
  toJs: toJs$1
};

var Js_$4 = {};

var PossibleTypesMap = {
  Js_: Js_$4
};

var FragmentMap;

var FieldPolicy;

var FieldReadFunction;

var FieldMergeFunction;

var KeyArgs;

var KeySpecifier;

var Pagination;

var SelectionSetNode;

exports.FragmentMap = FragmentMap;
exports.FieldPolicy = FieldPolicy;
exports.FieldReadFunction = FieldReadFunction;
exports.FieldMergeFunction = FieldMergeFunction;
exports.KeyArgs = KeyArgs;
exports.KeySpecifier = KeySpecifier;
exports.Pagination = Pagination;
exports.SelectionSetNode = SelectionSetNode;
exports.KeyFieldsContext = KeyFieldsContext;
exports.KeyFieldsFunction = KeyFieldsFunction;
exports.TypePolicy = TypePolicy;
exports.TypePolicies = TypePolicies;
exports.PossibleTypesMap = PossibleTypesMap;
/* ApolloClient__Utilities_Policies_Pagination Not a pure module */
