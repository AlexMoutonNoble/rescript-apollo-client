// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Client = require("@apollo/client");
var ApolloClient__React_Hooks_UseQuery = require("./react/hooks/ApolloClient__React_Hooks_UseQuery.bs.js");
var ApolloClient__React_Hooks_UseMutation = require("./react/hooks/ApolloClient__React_Hooks_UseMutation.bs.js");
var ApolloClient__Link_Http_CreateHttpLink = require("./link/http/ApolloClient__Link_Http_CreateHttpLink.bs.js");
var ApolloClient__React_Hooks_UseSubscription = require("./react/hooks/ApolloClient__React_Hooks_UseSubscription.bs.js");

function execute(prim0, prim1) {
  return Client.ApolloLink.execute(prim0, prim1);
}

var defaultDataIdFromObject = Client.defaultDataIdFromObject;

function empty(prim) {
  return Client.ApolloLink.empty();
}

function from(prim) {
  return Client.ApolloLink.from(prim);
}

function split(prim0, prim1, prim2) {
  return Client.ApolloLink.split(prim0, prim1, prim2);
}

function concat(prim0, prim1) {
  return Client.ApolloLink.concat(prim0, prim1);
}

function gql(prim) {
  return Client.gql(prim);
}

var Observable;

var ApolloLink;

var ApolloError;

var NetworkStatus;

var createHttpLink = ApolloClient__Link_Http_CreateHttpLink.createHttpLink;

var HttpLink;

var ApolloClient;

var ApolloCache;

var InMemoryCache;

var ApolloProvider;

var useQuery = ApolloClient__React_Hooks_UseQuery.useQuery;

var useMutation = ApolloClient__React_Hooks_UseMutation.useMutation;

var useSubscription = ApolloClient__React_Hooks_UseSubscription.useSubscription;

var Core;

var Cache;

var Errors;

var Link;

var React;

var Utilities;

exports.Observable = Observable;
exports.ApolloLink = ApolloLink;
exports.execute = execute;
exports.ApolloError = ApolloError;
exports.NetworkStatus = NetworkStatus;
exports.createHttpLink = createHttpLink;
exports.HttpLink = HttpLink;
exports.ApolloClient = ApolloClient;
exports.ApolloCache = ApolloCache;
exports.defaultDataIdFromObject = defaultDataIdFromObject;
exports.InMemoryCache = InMemoryCache;
exports.empty = empty;
exports.from = from;
exports.split = split;
exports.concat = concat;
exports.gql = gql;
exports.ApolloProvider = ApolloProvider;
exports.useQuery = useQuery;
exports.useMutation = useMutation;
exports.useSubscription = useSubscription;
exports.Core = Core;
exports.Cache = Cache;
exports.Errors = Errors;
exports.Link = Link;
exports.React = React;
exports.Utilities = Utilities;
/* defaultDataIdFromObject Not a pure module */
