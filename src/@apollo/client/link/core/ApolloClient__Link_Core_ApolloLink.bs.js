// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Client = require("@apollo/client");
var ApolloClient__Link_Core_Types = require("./ApolloClient__Link_Core_Types.bs.js");

var Static = {};

var Js_ = {
  Static: Static
};

function make(requestHandler) {
  return new Client.ApolloLink(ApolloClient__Link_Core_Types.RequestHandler.toJs(requestHandler));
}

function concat(prim0, prim1) {
  return prim0.concat(prim1);
}

function from(prim0, prim1) {
  return prim0.from(prim1);
}

function setOnError(prim0, prim1) {
  prim0.onError(prim1);
  
}

function split(t, test, whenTrue, whenFalse) {
  return t.split((function (jsOperation) {
                return Curry._1(test, ApolloClient__Link_Core_Types.Operation.fromJs(jsOperation));
              }), whenTrue, whenFalse);
}

var FetchResult;

var GraphQLRequest;

var Observable;

var Operation;

var RequestHandler;

var Static$1;

exports.FetchResult = FetchResult;
exports.GraphQLRequest = GraphQLRequest;
exports.Observable = Observable;
exports.Operation = Operation;
exports.RequestHandler = RequestHandler;
exports.Js_ = Js_;
exports.Static = Static$1;
exports.make = make;
exports.concat = concat;
exports.from = from;
exports.setOnError = setOnError;
exports.split = split;
/* @apollo/client Not a pure module */
