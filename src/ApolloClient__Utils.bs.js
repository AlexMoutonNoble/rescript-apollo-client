// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var React = require("react");
var Js_exn = require("rescript/lib/js/js_exn.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var Caml_js_exceptions = require("rescript/lib/js/caml_js_exceptions.js");
var ApolloClient__Errors_ApolloError = require("./@apollo/client/errors/ApolloClient__Errors_ApolloError.bs.js");

function safeParse(parse, jsData) {
  var data;
  try {
    data = Curry._1(parse, jsData);
  }
  catch (raw_error){
    var error = Caml_js_exceptions.internalToOCamlException(raw_error);
    if (error.RE_EXN_ID === Js_exn.$$Error) {
      return {
              TAG: /* Error */1,
              _0: {
                value: jsData,
                error: error._1
              }
            };
    }
    throw error;
  }
  return {
          TAG: /* Ok */0,
          _0: data
        };
}

function safeParseAndLiftToCommonResultProps(jsData, graphQLErrors, apolloError, safeParse) {
  var existingError = apolloError !== undefined ? apolloError : (
      graphQLErrors !== undefined ? ApolloClient__Errors_ApolloError.make(graphQLErrors, undefined, undefined, undefined, undefined) : undefined
    );
  var match = Belt_Option.map(jsData, Curry.__1(safeParse));
  if (match !== undefined) {
    if (match.TAG === /* Ok */0) {
      return [
              Caml_option.some(match._0),
              existingError
            ];
    } else if (Belt_Option.isSome(existingError)) {
      return [
              undefined,
              existingError
            ];
    } else {
      return [
              undefined,
              ApolloClient__Errors_ApolloError.make(graphQLErrors, {
                    TAG: /* ParseError */3,
                    _0: match._0
                  }, undefined, undefined, undefined)
            ];
    }
  } else {
    return [
            undefined,
            existingError
          ];
  }
}

function useGuaranteedMemo1(f, dependency) {
  var value = React.useRef(Curry._1(f, undefined));
  var previousDependency = React.useRef(dependency);
  if (dependency !== previousDependency.current) {
    value.current = Curry._1(f, undefined);
    previousDependency.current = dependency;
  }
  return value.current;
}

var ApolloError;

var Graphql;

var Types;

var ensureError = ApolloClient__Errors_ApolloError.ensureError;

exports.ApolloError = ApolloError;
exports.Graphql = Graphql;
exports.Types = Types;
exports.ensureError = ensureError;
exports.safeParse = safeParse;
exports.safeParseAndLiftToCommonResultProps = safeParseAndLiftToCommonResultProps;
exports.useGuaranteedMemo1 = useGuaranteedMemo1;
/* react Not a pure module */
